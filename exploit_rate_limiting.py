import os
import time
import json
import requests

# ─── Configuration ─────────────────────────────────────────────────────────────
CPR_FILE   = 'numbers_clean.txt'
OUTPUT_DIR = 'responses'
DATA_URL = 'https://app.danlon.dk/app/rest/cpropslag'
LOGIN_URL = "https://app.danlon.dk/app/oauth2/login?returnURL=/app/medarbejder/generelt/NY?u%3D1752663549968"
# ────────────────────────────────────────────────────────────────────────────────

HEADERS_LOGIN = {
    "Cookie": "SERVERID=8d7792f5dd722416; CookieInformationConsent=%7B%22website_uuid%22%3A%2234de0649-ba19-49e5-bf71-7e61257f381c%22%2C%22timestamp%22%3A%222025-07-16T11%3A00%3A30.888Z%22%2C%22consent_url%22%3A%22https%3A%2F%2Fauth.danlon.dk%2Fauth%2Frealms%2Fdanlon%2Fprotocol%2Fopenid-connect%2Fauth%3Fresponse_type%3Dcode%26client_id%3Ddanlon%26redirect_uri%3Dhttps%253A%252F%252Fapp.danlon.dk%252Fapp%252Foauth2%252FloginCallback%26scope%3Dopenid%2Bemail%26state%3D%252Fapp%252Fmedarbejder%252Fgenerelt%252FNY%253Fu%253D1752663549968%22%2C%22consent_website%22%3A%22danlon.dk%22%2C%22consent_domain%22%3A%22auth.danlon.dk%22%2C%22user_uid%22%3A%22acb1762d-ec5d-4830-8b66-cd6fbeb36eab%22%2C%22consents_approved%22%3A%5B%22cookie_cat_necessary%22%2C%22cookie_cat_functional%22%2C%22cookie_cat_statistic%22%2C%22cookie_cat_marketing%22%2C%22cookie_cat_unclassified%22%5D%2C%22consents_denied%22%3A%5B%5D%2C%22user_agent%22%3A%22Mozilla%2F5.0%20%28Windows%20NT%2010.0%3B%20Win64%3B%20x64%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F130.0.6723.70%20Safari%2F537.36%22%7D; JSESSIONID=CC3EFF30FAC0A3B2519FDADC591C0649",
    "Sec-Ch-Ua-Platform": '"Linux"',
    "X-Requested-With": "XMLHttpRequest",
    "Accept-Language": "en-US,en;q=0.9",
    "Accept": "application/json, text/javascript, */*; q=0.01",
    "Sec-Ch-Ua": '"Not?A_Brand";v="99", "Chromium";v="130"',
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.70 Safari/537.36",
    "Sec-Ch-Ua-Mobile": "?0",
    "Sec-Fetch-Site": "same-origin",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Dest": "empty",
    "Referer": "https://app.danlon.dk/app/medarbejder/generelt/NY?u=1752672913722",
    "Accept-Encoding": "gzip, deflate, br",
    "Priority": "u=1, i"
}

HEADERS_DATA = HEADERS_LOGIN.copy()

def is_cooldown(file_path):
    if not os.path.isfile(file_path):
        return False
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        return data.get("fejlkode") == "COOLDOWN"
    except (json.JSONDecodeError, IOError):
        return False

if __name__ == "__main__":
    os.makedirs(OUTPUT_DIR, exist_ok=True)

    with open(CPR_FILE, 'r', encoding='utf-8') as f:
        cpr_list = [l.strip() for l in f if l.strip()]

    session = requests.Session()

    for cpr in cpr_list:
        path = os.path.join(OUTPUT_DIR, f"{cpr}.json")

        if os.path.isfile(path):
            if is_cooldown(path):
                os.remove(path)
                print(f"[{cpr}] → removed COOLDOWN file.")
            else:
                print(f"[{cpr}] → already done, skipping.")
                continue

        # DATA GET
        ts   = int(time.time() * 1000)
        url = f"{DATA_URL}?cprnummer={cpr}&_={ts}"
        try:
            resp = session.get(url, headers=HEADERS_DATA)
            resp.raise_for_status()
            data = resp.json()
        except requests.exceptions.RequestException as e:
            print(f"[{cpr}] DATA HTTP ERROR: {e}")
            continue
        except json.JSONDecodeError:
            print(f"[{cpr}] DATA JSON DECODE ERROR: {resp.text}")
            continue

        # SAVE if not COOLDOWN
        if data.get("fejlkode") != "COOLDOWN":
            with open(path, 'w', encoding='utf-8') as out:
                json.dump(data, out, ensure_ascii=False, indent=2)
            size = len(json.dumps(data, ensure_ascii=False))
            print(f"[{cpr}] → saved ({size} bytes)\n")
        else:
            print(f"[{cpr}] → got COOLDOWN.")
            if os.path.isfile(path):
                os.remove(path)

    print("All done.")
