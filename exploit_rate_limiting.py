import os
import time
import json
import requests
from bs4 import BeautifulSoup

# ─── Configuration ─────────────────────────────────────────────────────────────
CPR_FILE   = 'numbers_clean.txt'
OUTPUT_DIR = 'responses'

# Data endpoint
DATA_URL = 'https://app.danlon.dk/app/rest/cpropslag'

# ────────────────────────────────────────────────────────────────────────────────

HEADERS_COMMON = {
    "User-Agent":        "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
    "Accept-Language":   "en-US,en;q=0.9",
    "Accept-Encoding":   "gzip, deflate, br"
}

def exists_and_ok(cpr):
    path = os.path.join(OUTPUT_DIR, f"{cpr}.json")
    if not os.path.isfile(path):
        return False
    try:
        with open(path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        return data.get("fejlkode") != "COOLDOWN"
    except (json.JSONDecodeError, IOError):
        return False

if __name__ == "__main__":
    os.makedirs(OUTPUT_DIR, exist_ok=True)

    with open(CPR_FILE, 'r', encoding='utf-8') as f:
        cpr_list = [l.strip() for l in f if l.strip()]

    for cpr in cpr_list:
        if exists_and_ok(cpr):
            print(f"[{cpr}] → already done, skipping.")
            continue

        path = os.path.join(OUTPUT_DIR, f"{cpr}.json")
        if os.path.isfile(path):
            print(f"[{cpr}] → removing stale COOLDOWN file.")
            os.remove(path)

        session = requests.Session()

        # DATA GET
        ts   = int(time.time() * 1000)
        try:
            resp = session.get(
                DATA_URL,
                params={'cprnummer': cpr, '_': ts},
                headers={**HEADERS_COMMON,
                         "X-Requested-With": "XMLHttpRequest",
                         "Accept": "application/json"},
                timeout=10
            )
            resp.raise_for_status()
            data = resp.json()
        except requests.exceptions.RequestException as e:
            print(f"[{cpr}] DATA HTTP ERROR: {e}")
            continue
        except json.JSONDecodeError:
            print(f"[{cpr}] DATA JSON DECODE ERROR: {resp.text}")
            continue

        # REMOVE if COOLDOWN
        if data.get("fejlkode") == "COOLDOWN":
            print(f"[{cpr}] → got COOLDOWN; removing file.")
            os.remove(path)
            continue

        # SAVE final JSON
        with open(path, 'w', encoding='utf-8') as out:
            json.dump(data, out, ensure_ascii=False, indent=2)
        size = len(json.dumps(data, ensure_ascii=False))
        print(f"[{cpr}] → saved ({size} bytes)\n")

    print("All done.")

